buildscript {
    ext {
        springBootVersion = '2.7.9'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:1.0.15.RELEASE"
    }
}

subprojects {
    group 'com.kb'
    version '1.0'

    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = '11'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
        testImplementation 'org.junit.jupiter:junit-jupiter-params:5.7.0'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
    }

    test {
        useJUnitPlatform()
    }

    processResources {
        duplicatesStrategy = DuplicatesStrategy.INCLUDE
    }

    ext {
        //어플리케이션 실행시 -Pprofile 변수로 local, alpha, beta, real 등 선택
        profile = (!project.hasProperty('profile') || !profile) ? 'local' : profile
    }

}

project(':module-search') {
    dependencies {
        implementation project(':module-common')
    }
}
